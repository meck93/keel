---
apiVersion: v1
kind: Namespace
metadata:
  name: keel
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: keel-service-account
  labels:
    app: keel
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: keel-cluster-role
rules:
  - apiGroups:
      - ''
    resources:
      - namespaces
    verbs:
      - watch
      - list
  - apiGroups:
      - ''
    resources:
      - secrets
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - ''
      - extensions
      - apps
      - batch
    resources:
      - pods
      - replicasets
      - replicationcontrollers
      - statefulsets
      - deployments
      - daemonsets
      - jobs
      - cronjobs
    verbs:
      - get
      - delete # required to delete pods during force upgrade of the same tag
      - watch
      - list
      - update
  - apiGroups:
      - ''
    resources:
      - configmaps
      - pods/portforward
    verbs:
      - get
      - create
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: keel-cluster-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: keel-cluster-role
subjects:
  - kind: ServiceAccount
    name: keel-service-account
---
apiVersion: v1
kind: Service
metadata:
  name: keel-service
spec:
  selector:
    app.kubernetes.io/name: keel
  ports:
    - name: http-port
      port: 9300 # can be changed to 80 if you want to expose Keel via a Ingress
      protocol: TCP
      targetPort: 9300
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keel-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: keel
  template:
    metadata:
      labels:
        app.kubernetes.io/name: keel
    spec:
      serviceAccountName: keel-service-account
      imagePullSecrets:
        - name: ghcr-cred
      containers:
        - name: keel
          image: ghcr.io/meck93/keel:latest
          imagePullPolicy: Always
          command: ['/bin/keel']
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: BASIC_AUTH_USER
              valueFrom:
                secretKeyRef:
                  name: keel-basic-auth-cred
                  key: username
            - name: BASIC_AUTH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keel-basic-auth-cred
                  key: password
            - name: SLACK_APP_TOKEN
              valueFrom:
                secretKeyRef:
                  name: keel-slack-cred
                  key: app_token
            - name: SLACK_BOT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: keel-slack-cred
                  key: bot_token
            - name: SLACK_CHANNELS
              valueFrom:
                secretKeyRef:
                  name: keel-slack-cred
                  key: channels
            - name: SLACK_APPROVALS_CHANNEL
              valueFrom:
                secretKeyRef:
                  name: keel-slack-cred
                  key: approvals_channel
            - name: SLACK_BOT_NAME
              valueFrom:
                secretKeyRef:
                  name: keel-slack-cred
                  key: bot_name
            - name: NOTIFICATION_LEVEL
              value: 'info'
          ports:
            - containerPort: 9300
          livenessProbe:
            httpGet:
              path: /healthz
              port: 9300
            initialDelaySeconds: 30
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi
